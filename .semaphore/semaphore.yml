version: v1.0
name: Docker
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
fail_fast:
  stop:
    when: 'true'
blocks:
  - name: Code Quality
    task:
      jobs:
        - name: hadolint
          commands:
            - docker run --rm -i ghcr.io/hadolint/hadolint < Dockerfile || true
        - name: shellcheck
          commands:
            - shellcheck *.sh
      prologue:
        commands:
          - checkout
    dependencies: []
  - name: Build
    task:
      jobs:
        - name: docker build
          commands:
            - 'docker build --progress=plain --target builder-image --cache-from "${DOCKERHUB_USERNAME}/webvirtmgr-docker:cache-${GIT_BRANCH_SLUG}" --tag "${DOCKERHUB_USERNAME}/webvirtmgr-docker:cache-${GIT_BRANCH_SLUG}" --build-arg BUILDKIT_INLINE_CACHE=1 .'
            - 'docker build --progress=plain --target runner-image --cache-from "${DOCKERHUB_USERNAME}/webvirtmgr-docker:cache-${GIT_BRANCH_SLUG}" --cache-from "${DOCKERHUB_USERNAME}/webvirtmgr-docker:commit-${GIT_SHA_SHORT}" --tag "${DOCKERHUB_USERNAME}/webvirtmgr-docker:commit-${GIT_SHA_SHORT}" --build-arg BUILDKIT_INLINE_CACHE=1 .'
            - 'docker tag "${DOCKERHUB_USERNAME}/webvirtmgr-docker:commit-${GIT_SHA_SHORT}" "${DOCKERHUB_USERNAME}/webvirtmgr-docker:branch-${GIT_BRANCH_SLUG}"'
      secrets:
        - name: dockerhub-secrets
      prologue:
        commands:
          - checkout
          - 'echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin'
          - artifact pull workflow gitinfo_docker.env && source gitinfo_docker.env
      env_vars:
        - name: DOCKER_BUILDKIT
          value: '1'
      epilogue:
        on_pass:
          commands:
            - 'docker push "${DOCKERHUB_USERNAME}/webvirtmgr-docker:cache-${GIT_BRANCH_SLUG}"'
            - 'docker push "${DOCKERHUB_USERNAME}/webvirtmgr-docker:commit-${GIT_SHA_SHORT}"'
            - 'docker push "${DOCKERHUB_USERNAME}/webvirtmgr-docker:branch-${GIT_BRANCH_SLUG}"'
    dependencies:
      - Git
    run:
      when: pull_request =~ '.*' OR branch = 'master'
  - name: Git
    run:
      when: pull_request =~ '.*' OR branch = 'master'
    dependencies: []
    task:
      jobs:
        - name: commit infos
          commands:
            - 'export GIT_SHA="${SEMAPHORE_GIT_PR_SHA:-$SEMAPHORE_GIT_SHA}"'
            - 'echo "GIT_SHA_SHORT=${GIT_SHA:0:8}" > gitinfo_docker.env'
            - echo -n "GIT_BRANCH_SLUG=" >> gitinfo_docker.env
            - 'echo -n "${SEMAPHORE_GIT_PR_BRANCH:-$SEMAPHORE_GIT_BRANCH}" | ruby -ne ''puts $_.downcase.gsub(/[^a-z0-9]/, "-")[0..62].gsub(/(\A-+|-+\z)/, "")'' >> gitinfo_docker.env'
      epilogue:
        always:
          commands:
            - cat gitinfo_docker.env
        on_pass:
          commands:
            - artifact push workflow --expire-in 1w gitinfo_docker.env
  - name: Test
    dependencies:
      - Build
      - Code Quality
    run:
      when: pull_request =~ '.*' OR branch = 'master'
    task:
      secrets:
        - name: dockerhub-secrets
      prologue:
        commands:
          - 'echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin'
          - artifact pull workflow gitinfo_docker.env && source gitinfo_docker.env
      epilogue:
        always:
          commands:
            - docker rm --force --volumes webvirtmgr || true
            - docker volume rm webvirtmgr-data
      jobs:
        - name: docker run
          commands:
            - docker volume create --driver local --opt type=tmpfs --opt device=tmpfs --opt o=size=100m webvirtmgr-data
            - 'docker run -d -p 8080:8080 -p 6080:6080 -v webvirtmgr-data:/data --name webvirtmgr "${DOCKERHUB_USERNAME}/webvirtmgr-docker:commit-${GIT_SHA_SHORT}"'
            - docker exec -ti --user=webvirtmgr webvirtmgr /webvirtmgr/manage.py test
  - name: Security
    dependencies:
      - Build
      - Code Quality
    task:
      secrets:
        - name: dockerhub-secrets
        - name: snyk
      prologue:
        commands:
          - 'echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin'
          - artifact pull workflow gitinfo_docker.env && source gitinfo_docker.env
      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu1804
        containers:
          - name: main
            image: 'snyk/snyk:docker'
            env_vars:
              - name: SNYK_INTEGRATION_NAME
                value: GITHUB_ACTIONS
              - name: SNYK_INTEGRATION_VERSION
                value: docker
      jobs:
        - name: snyk test
          commands:
            - 'export SNYK_TOKEN="${SNYK_TOKEN}"'
            - 'snyk test --severity-threshold=high --docker "${DOCKERHUB_USERNAME}/webvirtmgr-docker:commit-${GIT_SHA_SHORT}"'
promotions:
  - name: Publish on DockerHub
    pipeline_file: pipeline_2.yml
    auto_promote:
      when: branch = 'master' AND result = 'passed'
  - name: Debug
    pipeline_file: pipeline_3.yml
    auto_promote:
      when: (pull_request =~ '.*' OR branch = 'master') AND result = 'passed'
